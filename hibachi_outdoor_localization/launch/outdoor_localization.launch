<?xml version="1.0"?>
<launch>

  <!-- <param name="/use_sim_time" value="true" /> -->

  <rosparam command="load" file="$(find hibachi_outdoor_localization)/config/ekf_outdoor.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true" output="screen">
    <remap from="odometry/filtered" to="odometry/filtered_odom"/>
  </node>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true" output="screen">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true" output="screen">

    <!-- Subscribed topics -->
    <remap from="imu/data" to="mti_630_8A1G6/imu/data" />  <!-- imu/data A sensor_msgs/Imu message with orientation data -->
    <remap from="odometry/filtered" to="odometry/filtered_map" /> <!-- A nav_msgs/Odometry message of your robot’s current position. This is needed in the event that your first GPS reading comes after your robot has attained some non-zero pose. -->
    <remap from="gps/fix" to="ardusimple/fix" /> <!-- A sensor_msgs/NavSatFix message containing your robot’s GPS coordinates -->

    <!--  Published topics -->
    <remap from="odometry/gps" to="odometry/gps" /> <!-- A nav_msgs/Odometry message containing the GPS coordinates of your robot, transformed into its world coordinate frame. This message can be directly fused into robot_localization’s state estimation nodes. -->
    <remap from="gps/filtered" to="gps/filtered" /> <!-- (optional) A sensor_msgs/NavSatFix message containing your robot’s world frame position, transformed into GPS coordinates -->
  </node>


</launch>
